// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Age {
  cub     @map("Filhote")
  adult   @map("Adulto")
  elderly @map("Idoso")
}

enum Energy {
  low       @map("Baixo")
  moderate  @map("Moderado")
  high      @map("Alto")
  very_high @map("Muito Alto")
}

enum Size {
  small  @map("Pequeno")
  medium @map("Médio")
  big    @map("Grande")
}

enum Indepence {
  low    @map("Baixo (precisa de companhia sempre)")
  medium @map("Médio")
  high   @map("Alto")
}

enum Type {
  dog @map("Cachorro")
  cat @map("Gato")
}

enum HabitatSize {
  small  @map("Ambiente Pequeno")
  medium @map("Ambiente Medio")
  wide   @map("Ambiente Amplo")
}

model Pet {
  id           String      @id @default(uuid())
  name         String
  about        String?
  age          Age
  energy       Energy
  size         Size
  indepence    Indepence
  type         Type
  habitat_size HabitatSize

  org                  Org                    @relation(fields: [org_id], references: [id])
  org_id               String
  gallery              PetGallery[]
  adoptionRequirements AdoptionRequirements[]

  @@map("pets")
}

model Org {
  id            String @id @default(uuid())
  name          String
  email         String @unique
  cep           String
  state         String
  city          String
  address       String
  whatsapp      String
  password_hash String
  pets          Pet[]

  @@map("orgs")
}

model PetGallery {
  id    String @id @default(uuid())
  image String
  order Int

  pet_id String
  pet    Pet    @relation(fields: [pet_id], references: [id])

  @@map("pet_gallery")
}

model AdoptionRequirements {
  id    String @id @default(uuid())
  title String

  pet_id String
  pet    Pet    @relation(fields: [pet_id], references: [id])

  @@map("adoption_requirements")
}
